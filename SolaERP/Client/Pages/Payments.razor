@page "/payments"
@implements IDisposable
@using Model = PaymentDocumentMain


<PageTitle>Payment Documents</PageTitle>


<div class="k-pb-4">
    <label for="bu_list">Business Unit:</label>
    <ItemDropDownList Id="bu_list"
                      Data="@businessUnitList"
                      Item="@selectedBusinessUnit"
                      ItemChanged="@BusinessUnitChanged"
                      UniqueField="BusinessUnitId"
                      TextField="BusinessUnitCode"
                      TValue="int"
                      TItem="BusinessUnit"
                      SearchFields="@(new List<string> { "BusinessUnitCode", "BusinessUnitName"})"
                      Width="300px"
                      PopupWidth="100%"
                      PopupMaxWidth="500px" />
</div>

<TelerikTabStrip ActiveTabIndex="@activeTabIndex" ActiveTabIndexChanged="@ActiveTabIndexChanged">
    <TabStripTab Title="Waiting for Approval">
        <Content>
            <DataGrid Data="@modelList"
                      CanExport="true"
                      Height="calc(100vh - 285px)"
                      SearchFields="@(new List<string> { "VendorCode", "VendorName", "Reference", "StatusName", "CurrencyCode","Comment" })"
                      @bind-SelectedItems="@selectedItems">
                <GridColumn Field="@(nameof(Model.PaymentDocumentMainId))" Title="Id" Width="70px" Editable="false" TextAlign="ColumnTextAlign.Right" Visible="false" />
                <GridColumn Field="@(nameof(Model.VendorCode))" Title="Vendor Code" Width="130px" />
                <GridColumn Field="@(nameof(Model.VendorName))" Title="Vendor Name" Width="300px" />
                <GridColumn Field="@(nameof(Model.Reference))" Title="Reference" Width="240px" />
                <GridColumn Field="@(nameof(Model.StatusName))" Title="Status" Width="110px" />
                <GridColumn Field="@(nameof(Model.Amount))" Title="Amount" DisplayFormat="{0:N3}" TextAlign="ColumnTextAlign.Right" Width="200px" />
                <GridColumn Field="@(nameof(Model.VAT))" Title="VAT" DisplayFormat="{0:N3}" TextAlign="ColumnTextAlign.Right" Width="200px" />
                <GridColumn Field="@(nameof(Model.CurrencyCode))" Title="Currency" Width="110px" />
                <GridColumn Field="@(nameof(Model.Comment))" Title="Comment" Width="400px" />
            </DataGrid>
        </Content>
    </TabStripTab>
    <TabStripTab Title="Draft">
        <Content>
            <DataGrid Data="@modelList"
                      CanDelete="true"
                      CanExport="true"
                      Height="calc(100vh - 285px)"
                      SearchFields="@(new List<string> { "VendorCode", "VendorName", "Reference", "StatusName", "CurrencyCode","Comment" })"
                      OnDelete="@((IEnumerable<Model> items) => DeleteHandler(items))"
                      @bind-SelectedItems="@selectedItems">
                <GridColumn Field="@(nameof(Model.PaymentDocumentMainId))" Title="Id" Width="70px" Editable="false" TextAlign="ColumnTextAlign.Right" Visible="false" />
                <GridColumn Field="@(nameof(Model.VendorCode))" Title="Vendor Code" Width="130px" />
                <GridColumn Field="@(nameof(Model.VendorName))" Title="Vendor Name" Width="300px" />
                <GridColumn Field="@(nameof(Model.Reference))" Title="Reference" Width="240px" />
                <GridColumn Field="@(nameof(Model.StatusName))" Title="Status" Width="110px" />
                <GridColumn Field="@(nameof(Model.Amount))" Title="Amount" DisplayFormat="{0:N3}" TextAlign="ColumnTextAlign.Right" Width="200px" />
                <GridColumn Field="@(nameof(Model.VAT))" Title="VAT" DisplayFormat="{0:N3}" TextAlign="ColumnTextAlign.Right" Width="200px" />
                <GridColumn Field="@(nameof(Model.CurrencyCode))" Title="Currency" Width="110px" />
                <GridColumn Field="@(nameof(Model.Comment))" Title="Comment" Width="400px" />
            </DataGrid>
        </Content>
    </TabStripTab>
    <TabStripTab Title="All">
        <Content>
            <DataGrid Data="@modelList"
                      CanExport="true"
                      Height="calc(100vh - 285px)"
                      SearchFields="@(new List<string> { "VendorCode", "VendorName", "Reference", "StatusName", "CurrencyCode","Comment" })"
                      @bind-SelectedItems="@selectedItems">
                <GridColumn Field="@(nameof(Model.PaymentDocumentMainId))" Title="Id" Width="70px" Editable="false" TextAlign="ColumnTextAlign.Right" Visible="false" />
                <GridColumn Field="@(nameof(Model.VendorCode))" Title="Vendor Code" Width="130px" />
                <GridColumn Field="@(nameof(Model.VendorName))" Title="Vendor Name" Width="300px" />
                <GridColumn Field="@(nameof(Model.Reference))" Title="Reference" Width="240px" />
                <GridColumn Field="@(nameof(Model.StatusName))" Title="Status" Width="110px" />
                <GridColumn Field="@(nameof(Model.Amount))" Title="Amount" DisplayFormat="{0:N3}" TextAlign="ColumnTextAlign.Right" Width="200px" />
                <GridColumn Field="@(nameof(Model.VAT))" Title="VAT" DisplayFormat="{0:N3}" TextAlign="ColumnTextAlign.Right" Width="200px" />
                <GridColumn Field="@(nameof(Model.CurrencyCode))" Title="Currency" Width="110px" />
                <GridColumn Field="@(nameof(Model.Comment))" Title="Comment" Width="400px" />
            </DataGrid>
        </Content>
    </TabStripTab>
    <TabStripTab Title="Approved">
        <Content>
            <DataGrid Data="@modelList"
                      CanExport="true"
                      Height="calc(100vh - 285px)"
                      SearchFields="@(new List<string> { "VendorCode", "VendorName", "Reference", "StatusName", "CurrencyCode","Comment" })"
                      @bind-SelectedItems="@selectedItems">
                <GridColumn Field="@(nameof(Model.PaymentDocumentMainId))" Title="Id" Width="70px" Editable="false" TextAlign="ColumnTextAlign.Right" Visible="false" />
                <GridColumn Field="@(nameof(Model.VendorCode))" Title="Vendor Code" Width="130px" />
                <GridColumn Field="@(nameof(Model.VendorName))" Title="Vendor Name" Width="300px" />
                <GridColumn Field="@(nameof(Model.Reference))" Title="Reference" Width="240px" />
                <GridColumn Field="@(nameof(Model.StatusName))" Title="Status" Width="110px" />
                <GridColumn Field="@(nameof(Model.Amount))" Title="Amount" DisplayFormat="{0:N3}" TextAlign="ColumnTextAlign.Right" Width="200px" />
                <GridColumn Field="@(nameof(Model.VAT))" Title="VAT" DisplayFormat="{0:N3}" TextAlign="ColumnTextAlign.Right" Width="200px" />
                <GridColumn Field="@(nameof(Model.CurrencyCode))" Title="Currency" Width="110px" />
                <GridColumn Field="@(nameof(Model.Comment))" Title="Comment" Width="400px" />
            </DataGrid>
        </Content>
    </TabStripTab>
    <TabStripTab Title="Bank">
        <Content>
            <DataGrid Data="@modelList"
                      CanExport="true"
                      Height="calc(100vh - 285px)"
                      SearchFields="@(new List<string> { "VendorCode", "VendorName", "Reference", "StatusName", "CurrencyCode","Comment" })"
                      @bind-SelectedItems="@selectedItems">
                <GridColumn Field="@(nameof(Model.PaymentDocumentMainId))" Title="Id" Width="70px" Editable="false" TextAlign="ColumnTextAlign.Right" Visible="false" />
                <GridColumn Field="@(nameof(Model.VendorCode))" Title="Vendor Code" Width="130px" />
                <GridColumn Field="@(nameof(Model.VendorName))" Title="Vendor Name" Width="300px" />
                <GridColumn Field="@(nameof(Model.Reference))" Title="Reference" Width="240px" />
                <GridColumn Field="@(nameof(Model.StatusName))" Title="Status" Width="110px" />
                <GridColumn Field="@(nameof(Model.Amount))" Title="Amount" DisplayFormat="{0:N3}" TextAlign="ColumnTextAlign.Right" Width="200px" />
                <GridColumn Field="@(nameof(Model.VAT))" Title="VAT" DisplayFormat="{0:N3}" TextAlign="ColumnTextAlign.Right" Width="200px" />
                <GridColumn Field="@(nameof(Model.CurrencyCode))" Title="Currency" Width="110px" />
                <GridColumn Field="@(nameof(Model.Comment))" Title="Comment" Width="400px" />
            </DataGrid>
        </Content>
    </TabStripTab>
</TelerikTabStrip>


@code {
    // Grid specific variables - start
    Guid gridKey;
    TelerikGrid<Model> gridRef;
    List<Model> modelList = new();
    IEnumerable<Model> selectedModelList = new List<Model>();
    List<Model> deletedModelList = new List<Model>();
    Model selectedModel;
    bool showRowButtons = false;
    bool showDecimals = false;
    bool showGroup = false;
    bool showCheckBox = false;
    int gridPageSize = 20;
    bool gridReadOnly = false;
    bool editMode = false;
    // Grid specific variables - end

    // Page specific variables - start
    IEnumerable<BusinessUnit> businessUnitList = new List<BusinessUnit>();
    BusinessUnit selectedBusinessUnit = new();
    // Page specific variables - end

    int activeTabIndex = 0;

    [CascadingParameter] public AppState AppState { get; set; }
    [CascadingParameter] public DialogFactory Dialogs { get; set; }

    List<Model> deletedItems = new List<Model>();
    IEnumerable<Model> selectedItems = new List<Model>();
    void DeleteHandler(IEnumerable<Model> items)
    {
        deletedItems = items.ToList();
    }

    protected override async Task OnInitializedAsync()
    {
        OnAppStateInitialized();
        await LoadData();
    }

    void OnAppStateInitialized()
    {
        AppState.SetDefaults();
        AppState.AddButtonVisible = true;
        AppState.OnAddClick += AddClick;
        AppState.OnReloadClick += ReloadClick;
    }

    void IDisposable.Dispose()
    {
        AppState.OnAddClick -= AddClick;
        AppState.OnReloadClick -= ReloadClick;
    }

    async Task LoadData()
    {
        AppState.Loading = true;
        await GetBusinessUnitList();
        await GetPaymentDocumentList();
        AppState.Loading = false;
    }

    async void ReloadClick()
    {
        await LoadData();
    }

    async Task GetBusinessUnitList()
    {
        businessUnitList = await Http.GetFromJsonAsync<IEnumerable<BusinessUnit>>("BusinessUnit");
        selectedBusinessUnit = businessUnitList.Any() ? businessUnitList.FirstOrDefault() : new();
    }

    async Task GetPaymentDocumentList()
    {
        var _modelList = await Http.GetFromJsonAsync<IEnumerable<Model>>($"PaymentDocument/GetAll?bu={selectedBusinessUnit.BusinessUnitId}&tabindex={activeTabIndex}");
        modelList = _modelList.ToList();
    }

    void GoToDetails(int id)
    {
        NavigationManager.NavigateTo($"/payments/card?{id}");
    }

    void OnRowClickHandler(GridRowClickEventArgs args)
    {
    //
    }

    void OnRowDoubleClickHandler(GridRowClickEventArgs args)
    {
        var argsItem = args.Item as Model;
        GoToDetails(argsItem.PaymentDocumentMainId);
    }

    void AddClick()
    {
        AppState.Loading = true;
        NavigationManager.NavigateTo($"/payments/generate?bu={selectedBusinessUnit.BusinessUnitId}");
    }

    async Task BusinessUnitChanged(BusinessUnit businessUnit)
    {
        AppState.Loading = true;
        selectedBusinessUnit = businessUnit;
        await GetPaymentDocumentList();
        AppState.Loading = false;
    }

    async Task ActiveTabIndexChanged(int tabIndex)
    {
        AppState.Loading = true;
        activeTabIndex = tabIndex;
        await GetPaymentDocumentList();
        AppState.Loading = false;
    }

}

<style>
    .mud-checkbox .mud-icon-button {
        padding: 0;
    }
</style>