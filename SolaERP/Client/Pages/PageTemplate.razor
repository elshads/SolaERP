@page "/pagetemplate"
@implements IDisposable
@using Model = BaseModel

<PageTitle>Page Template</PageTitle>


@code {
    int activeTabIndex = 0;
    bool isMobileView = false;

    [CascadingParameter] public AppState AppState { get; set; }
    [CascadingParameter] public DialogFactory Dialogs { get; set; }

    protected override async Task OnInitializedAsync()
    {
        SetQueryVariables();
        OnAppStateInitialized();
        await LoadData();
    }

    void OnAppStateInitialized()
    {
        AppState.SetDefaults();
        AppState.Report = new() { ReportId = 1, ReportName = NavigationManager.ToBaseRelativePath(NavigationManager.Uri) };
        AppState.OnReloadClick += ReloadClick;
    }

    void IDisposable.Dispose()
    {
        AppState.OnReloadClick -= ReloadClick;
    }

    void SetQueryVariables()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

        var _modelId = 0;
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("id", out var _id))
        {
            _modelId = Convert.ToInt32(_id);
        }

        var _modelCode = "";
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("code", out var _code))
        {
            _modelCode = _code;
        }
    }

    async Task LoadData()
    {
        AppState.Loading = true;
        // do something
        AppState.Loading = false;
    }

    async void ReloadClick()
    {
        await LoadData();
    }

}